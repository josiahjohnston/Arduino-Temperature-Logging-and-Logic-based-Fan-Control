#!/sw/bin/awk -f
# This script averages all of the readings that occured in the same minute.
# It expects a comma delimited file with Unix-style line endings.

BEGIN { 
  num_dat_cols = 8;
  dat_start_col = 2;
  last_timestamp=0;
  num_header_lines=0;
  FS=","; 
}

{ 
  if( NR > num_header_lines ) {
    cur_timestamp=$1;
    sub(/\:[0-9]+\"$/, "\"", cur_timestamp);
    if( last_timestamp != cur_timestamp ) {
      # Print the average of the prior readings if we have any
      if( last_timestamp != 0 ) {
        printf "%s\t",last_timestamp;
        for(i=1; i<=num_dat_cols; i++) {
          if( num_readings[i] > 0 ) {
            printf "%.2f\t", (readings[i]/num_readings[i]);
          } else {
            printf "ERR\t";
          }
        }
        printf "\n";
      }
      # Initialize the readings
      for(i=1; i<=num_dat_cols; i++) {
        readings[i]=$(dat_start_col + i - 1);
        if(readings[i]!="ERR") {
          num_readings[i] = 1;
        } else {
          num_readings[i] = 0;
        }
      }
      last_timestamp = cur_timestamp;
    } else {
      for(i=1; i<=num_dat_cols; i++) {
        if($(dat_start_col + i - 1) != "ERR") {
          num_readings[i]++;
          readings[i]+=$(dat_start_col + i - 1);
        }
      }
    }
  }
}

END {
# Print out the last readings
  if( last_timestamp != 0 ) {
    printf "%s\t",last_timestamp;
    for(i=1; i<=num_dat_cols; i++) {
      printf "%.2f\t", (readings[i]/num_readings[i]);
    }
    printf "\n";
  }
}